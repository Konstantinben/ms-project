kind: ConfigMap
apiVersion: v1
metadata:
  name: social-core
data:
  application.yml: |-
    server:
      port: ${APP_PORT:8080}
      shutdown: immediate
      error.include-stacktrace: never
    springdoc:
      show-actuator: true
      swagger-ui.path: /api.html
    management:
      security:
        enabled: false
      endpoints:
        web:
          discovery:
            enabled: false
          exposure:
            include: prometheus, metrics, info, health
      metrics:
        export:
          prometheus:
            enabled: true
        distribution:
          percentiles-histogram:
            "[http.server.requests]": true
      endpoint:
        metrics:
          enabled: true
        prometheus:
          enabled: true
        health:
          cache.time-to-live: 100ms
          probes.enabled: true
          show-details: always
          show-components: always
    logging:
      appender: ${LOGGING_APPENDERS:stdout}
      root:
        level: DEBUG
      level:
        otus.ms.social: DEBUG
        org.springframework: DEBUG
    spring:
      application:
        name: social-core
      jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        generate-ddl: false
        hibernate:
          ddl-auto: none
        show-sql: true
        database: postgresql
        properties:
          hibernate:
            generate_statistics: false
          jdbc:
            batch_size: 100
          order_inserts: true
          order_updates: true
      datasource:
        url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
        jdbc-url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
        username: ${DB_USER:postgres}
        password: ${DB_PWD:pass}
        driver-class-name: org.postgresql.Driver
        # initialization-mode: always
        hikari:
          maximum-pool-size: ${DB_MAX_CONNECTIONS:100}
          minimum-idle: ${DB_MIN_CONNECTIONS:3}
      datasource-readonly:
        url: ${DB_READ_URL:jdbc:postgresql://localhost:5432/postgres}
        jdbc-url: ${DB_READ_URL:jdbc:postgresql://localhost:5432/postgres}
        username: ${DB_USER:postgres}
        password: ${DB_PWD:pass}
        driver-class-name: org.postgresql.Driver
        # initialization-mode: always
        hikari:
          maximum-pool-size: ${DB_MAX_CONNECTIONS:100}
          minimum-idle: ${DB_MIN_CONNECTIONS:3}
      liquibase:
        enabled: true
        change-log: classpath:/db/evolution/db.changelog-master.yaml
        url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
        user: ${DB_USER:postgres}
        password: ${DB_PWD:pass}
        driver-class-name: org.postgresql.Driver
      redis:
        database: 0
        host: ${REDIS_HOST:localhost}
        port: 6379
        password: ${REDIS_PWD:}
        timeout: 20000
    app:
      jwt:
        secret: ${JWT_SECRET:megaTopSecret}
        expiration: 100500000
        header: Authorization
      redis:
        cache:
          bulk-update-size: 20
          feed-size: 1000
        topics:
          post-create: post-create
          post-create-friends: post-create-friends
      dialog-service-uri: ${DIALOG_SERVICE_URI:localhost:8089}
      auth-service-uri: ${AUTH_SERVICE_URI:localhost:8087}
      admin-user-email: ${ADMIN_EMAIL:admin@mshw.com}
      admin-user-uuid: ${ADMIN_UUID:50109079-8dec-4847-868e-717c77deb881}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: social-auth
data:
  application.yml: |-
    server:
      port: ${APP_PORT:8087}
      shutdown: immediate
      error.include-stacktrace: never
    springdoc:
      show-actuator: true
      swagger-ui.path: /api.html
    management:
      endpoints:
        web:
          discovery:
            enabled: false
          exposure:
            include: health,prometheus,info
      metrics:
        export:
          prometheus:
            enabled: true
        distribution:
          percentiles-histogram:
            "[http.server.requests]": true
      #    web:
      #      server:
      #        request:
      #          autotime:
      #            percentiles: 0.50,0.95,0.99,0.999
      endpoint.health:
        cache.time-to-live: 100ms
        probes.enabled: true
        show-details: always
        show-components: always
    logging:
      appender: ${LOGGING_APPENDERS:stdout}
      root:
        level: DEBUG
      level:
        org.springframework.jdbc: DEBUG
        otus.ms: DEBUG
    spring:
      application:
        name: ms-hw-9-auth
      autoconfigure:
        exclude[0]: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
        exclude[1]: org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
      jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        generate-ddl: false
        hibernate:
          ddl-auto: none
        show-sql: true
        database: postgresql
        properties:
          hibernate:
            generate_statistics: false
          jdbc:
            batch_size: 100
          order_inserts: true
          order_updates: true
      datasource:
        url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
        jdbc-url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
        username: ${DB_USER:postgres}
        password: ${DB_PWD:pass}
        driver-class-name: org.postgresql.Driver
        # initialization-mode: always
        hikari:
          maximum-pool-size: ${DB_MAX_CONNECTIONS:100}
          minimum-idle: ${DB_MIN_CONNECTIONS:3}
      liquibase:
        enabled: true
        change-log: classpath:/db/evolution/db.changelog-master.yaml
        url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
        user: ${DB_USER:postgres}
        password: ${DB_PWD:pass}
    app:
      jwt:
        secret: ${JWT_SECRET:megaTopSecret}
        expiration: 100500000
        header: Authorization
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: social-dialog
data:
  application.yml: |-
    server:
      port: ${APP_PORT:8080}
      shutdown: immediate
      error.include-stacktrace: never
    springdoc:
      show-actuator: true
      swagger-ui.path: /api.html
    management:
      security:
        enabled: false
      endpoints:
        web:
          discovery:
            enabled: false
          exposure:
            include: prometheus, metrics, info, health
      metrics:
        export:
          prometheus:
            enabled: true
        distribution:
          percentiles-histogram:
            "[http.server.requests]": true
      endpoint:
        metrics:
          enabled: true
        prometheus:
          enabled: true
        health:
          cache.time-to-live: 100ms
          probes.enabled: true
          show-details: always
          show-components: always
    logging:
      appender: ${LOGGING_APPENDERS:stdout}
      root:
        level: DEBUG
      level:
        otus.ms.social: DEBUG
        org.springframework: DEBUG
    spring:
      application:
        name: social-dialog
      jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        generate-ddl: false
        hibernate:
          ddl-auto: none
        show-sql: true
        database: postgresql
        properties:
          hibernate:
            generate_statistics: false
          jdbc:
            batch_size: 100
          order_inserts: true
          order_updates: true
      datasource:
        url: ${DB_URL:jdbc:postgresql://localhost:35432/postgres}
        jdbc-url: ${DB_URL:jdbc:postgresql://localhost:35432/postgres}
        username: ${DB_USER:postgres}
        password: ${DB_PWD:pass}
        driver-class-name: org.postgresql.Driver
        # initialization-mode: always
        hikari:
          maximum-pool-size: ${DB_MAX_CONNECTIONS:100}
          minimum-idle: ${DB_MIN_CONNECTIONS:3}
      liquibase:
        enabled: true
        change-log: classpath:/db/evolution/db.changelog-master.yaml
        url: ${DB_URL:jdbc:postgresql://localhost:35432/postgres}
        user: ${DB_USER:postgres}
        password: ${DB_PWD:pass}
    app:
      jwt:
        secret: ${JWT_SECRET:megaTopSecret}
        expiration: 100500000
        header: Authorization
      auth-service-uri: ${AUTH_SERVICE_URI:localhost:8087}
      admin-user-email: ${ADMIN_EMAIL:admin@mshw.com}
      admin-user-uuid: ${ADMIN_UUID:50109079-8dec-4847-868e-717c77deb881}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: social-post
data:
  application.yml: |-
    server:
      port: ${APP_PORT:8080}
      shutdown: immediate
      error.include-stacktrace: never
    springdoc:
      show-actuator: true
      swagger-ui.path: /api.html
    management:
      security:
        enabled: false
      endpoints:
        web:
          discovery:
            enabled: false
          exposure:
            include: prometheus, metrics, info, health
      metrics:
        export:
          prometheus:
            enabled: true
        distribution:
          percentiles-histogram:
            "[http.server.requests]": true
      endpoint:
        metrics:
          enabled: true
        prometheus:
          enabled: true
        health:
          cache.time-to-live: 100ms
          probes.enabled: true
          show-details: always
          show-components: always
    logging:
      appender: ${LOGGING_APPENDERS:stdout}
      root:
        level: DEBUG
      level:
        otus.ms.social: DEBUG
        org.springframework: DEBUG
    spring:
      application:
        name: social-post
      redis:
        database: 0
        host: ${REDIS_HOST:localhost}
        port: 6379
        password: ${REDIS_PWD:}
        timeout: 20000
    app:
      jwt:
        secret: ${JWT_SECRET:megaTopSecret}
        expiration: 100500000
        header: Authorization
      redis:
        cache:
          bulk-update-size: 20
          feed-size: 1000
        topics:
          post-create-friends: post-create-friends